<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/source/repos/App.Admin/App.Admin/Controllers/Base/BaseController.cs" timestamp="1534517645777">
        <mark key="'" line="55" column="36" />
        <mark key="[" line="410" column="97" />
        <mark key="]" line="410" column="150" />
        <mark key="." line="410" column="150" />
        <mark key="^" line="410" column="150" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Submissions/App.Submissions/Views/Involvement/EventSubmissions.aspx" timestamp="1534359328870">
        <mark key="[" line="26" column="0" />
        <mark key="]" line="26" column="118" />
        <mark key="." line="26" column="0" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Admin/App.Admin/Web.config" timestamp="1534448244635">
        <mark key="'" line="104" column="29" />
        <mark key="[" line="105" column="0" />
        <mark key="]" line="105" column="47" />
        <mark key="^" line="171" column="43" />
        <mark key="." line="105" column="0" />
      </file>
      <file name="$USER_HOME$/Code/Evaluations/Evaluations/Views/Shared/_ErrorDisplay.cshtml" timestamp="1531409173859">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/templates/submissionsAllSelfSubmitted.html" timestamp="1534262082190">
        <mark key="[" line="6" column="0" />
        <mark key="]" line="6" column="0" />
        <mark key="." line="6" column="0" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Budgeting.Legacy/WebApi/Controllers/Organizations/OrganizationsController.cs" timestamp="1533236082538">
        <mark key="[" line="87" column="0" />
        <mark key="]" line="87" column="0" />
        <mark key="." line="87" column="0" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/Views/Shared/_AngularLayout.cshtml" timestamp="1534429526368">
        <mark key="[" line="117" column="19" />
        <mark key="]" line="117" column="19" />
        <mark key="^" line="117" column="20" />
        <mark key="." line="117" column="19" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Submissions/App.Submissions/Views/Involvement/ElectionSubmissions.aspx" timestamp="1534359345552">
        <mark key="[" line="27" column="0" />
        <mark key="]" line="27" column="118" />
        <mark key="." line="27" column="28" />
        <mark key="^" line="27" column="75" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Submissions/App.Submissions/Views/Involvement/UserRegistrationSubmissions.aspx" timestamp="1534359334860">
        <mark key="'" line="25" column="28" />
        <mark key="[" line="25" column="0" />
        <mark key="]" line="25" column="118" />
        <mark key="." line="25" column="28" />
        <mark key="^" line="25" column="74" />
      </file>
      <file name="$USER_HOME$/Code/Evaluations/Evaluations/Views/Evaluation/Index.cshtml" timestamp="1531409899349">
        <mark key="[" line="39" column="0" />
        <mark key="]" line="39" column="0" />
        <mark key="." line="39" column="0" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Submissions/App.Submissions/Web.config" timestamp="1534426205888">
        <mark key="[" line="123" column="101" />
        <mark key="]" line="124" column="3" />
        <mark key="^" line="124" column="3" />
        <mark key="." line="124" column="3" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/router.js" timestamp="1534423142199">
        <mark key="[" line="18" column="78" />
        <mark key="]" line="18" column="78" />
        <mark key="." line="18" column="78" />
        <mark key="^" line="18" column="85" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Admin/App.Admin/Areas/Admin/Views/Finance/PayeeRequests.cshtml" timestamp="1534509152975" />
      <file name="$USER_HOME$/source/repos/App.Submissions/App.Submissions/Views/Involvement/FormSubmissions.aspx" timestamp="1534426916879">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="2" column="52" />
        <mark key="." line="27" column="0" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/templates/mySubmissions.html" timestamp="1534429551320">
        <mark key="'" line="9" column="56" />
        <mark key="[" line="43" column="0" />
        <mark key="]" line="43" column="0" />
        <mark key="^" line="21" column="24" />
        <mark key="." line="43" column="0" />
      </file>
      <file name="$USER_HOME$/Code/Evaluations/Evaluations/Views/Shared/QuestionTypes/Checkbox.cshtml" timestamp="1531409913493">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="2" column="51" />
        <mark key="." line="2" column="0" />
      </file>
      <file name="$USER_HOME$/Code/Evaluations/Evaluations/Views/Shared/QuestionTypes/Dropdown.cshtml" timestamp="1531409921105">
        <mark key="[" line="3" column="0" />
        <mark key="]" line="3" column="0" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="$USER_HOME$/Code/Evaluations/Evaluations/Views/Shared/QuestionGroup.cshtml" timestamp="1531409826733">
        <mark key="[" line="26" column="0" />
        <mark key="]" line="26" column="163" />
        <mark key="." line="26" column="12" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/submission.js" timestamp="1534429670214">
        <mark key="'" line="688" column="13" />
        <mark key="[" line="685" column="0" />
        <mark key="]" line="685" column="0" />
        <mark key="^" line="695" column="34" />
        <mark key="." line="685" column="0" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/Web.config" timestamp="1534425700780">
        <mark key="[" line="37" column="0" />
        <mark key="]" line="37" column="0" />
        <mark key="^" line="36" column="35" />
        <mark key="." line="37" column="0" />
      </file>
      <file name="$USER_HOME$/Code/Evaluations/Evaluations/Views/Shared/Question.cshtml" timestamp="1531409666541">
        <mark key="[" line="25" column="0" />
        <mark key="]" line="25" column="64" />
        <mark key="." line="44" column="0" />
      </file>
      <file name="$USER_HOME$/Code/ReportBlobber/ReportBlobber/Models/DataTransferObjects/Section.cs" timestamp="1531157244771">
        <mark key="[" line="29" column="0" />
        <mark key="]" line="29" column="59" />
        <mark key="." line="91" column="0" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/campuslabs.submissions.templates.js" timestamp="1534423108072">
        <mark key="[" line="10" column="27" />
        <mark key="]" line="10" column="27" />
        <mark key="^" line="10" column="26" />
        <mark key="." line="10" column="27" />
      </file>
      <file name="$USER_HOME$/Code/Evaluations/Evaluations/Views/Shared/_QuestionLabel.cshtml" timestamp="1531409007891">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/Views/Home/Index.cshtml" timestamp="1534424805845">
        <mark key="[" line="12" column="0" />
        <mark key="]" line="12" column="0" />
        <mark key="." line="12" column="0" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/Global.asax.cs" timestamp="1532461432153">
        <mark key="[" line="56" column="0" />
        <mark key="]" line="56" column="0" />
        <mark key="." line="56" column="0" />
      </file>
      <file name="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/templates/submissions.html" timestamp="1534422948809">
        <mark key="[" line="19" column="0" />
        <mark key="]" line="19" column="0" />
        <mark key="." line="19" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="13" column="5" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/collegiateLinkOrganizationService.js" />
      <jump line="621" column="21" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="78" column="12" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="0" column="0" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/WebApi/Controllers/Submissions/SubmissionsController.cs" />
      <jump line="77" column="12" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="54" column="33" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="625" column="21" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="84" column="12" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="600" column="30" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="509" column="32" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="136" column="0" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="116" column="0" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="506" column="32" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="597" column="30" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="55" column="42" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="129" column="30" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Base/Domain/MailFacade.cs" />
      <jump line="22" column="10" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/submission.js" />
      <jump line="2" column="0" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/templates/myBudgetSubmissions.html" />
      <jump line="137" column="0" filename="$USER_HOME$/source/repos/App.Submissions/App.Submissions/Controllers/InvolvementController.cs" />
      <jump line="25" column="28" filename="$USER_HOME$/source/repos/App.Submissions/App.Submissions/Views/Involvement/UserRegistrationSubmissions.aspx" />
      <jump line="79" column="48" filename="$USER_HOME$/source/repos/App.Submissions/App.Submissions/Web.config" />
      <jump line="0" column="27" filename="/Dummy.txt" />
      <jump line="386" column="10" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/submission.js" />
      <jump line="90" column="36" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/gridWrapper.js" />
      <jump line="88" column="36" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/gridWrapper.js" />
      <jump line="78" column="102" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/gridWrapper.js" />
      <jump line="76" column="96" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/gridWrapper.js" />
      <jump line="74" column="86" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/gridWrapper.js" />
      <jump line="50" column="69" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/gridWrapper.js" />
      <jump line="27" column="124" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/gridWrapper.js" />
      <jump line="25" column="106" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/gridWrapper.js" />
      <jump line="12" column="22" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/gridWrapper.js" />
      <jump line="2" column="167" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/gridWrapper.js" />
      <jump line="94" column="40" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/gridWrapper.js" />
      <jump line="9" column="56" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/templates/mySubmissions.html" />
      <jump line="611" column="2" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/submission.js" />
      <jump line="80" column="28" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/submission.js" />
      <jump line="23" column="36" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/submission.js" />
      <jump line="664" column="13" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/submission.js" />
      <jump line="327" column="120" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/submission.js" />
      <jump line="309" column="233" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/submission.js" />
      <jump line="699" column="6" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/submission.js" />
      <jump line="688" column="13" filename="$USER_HOME$/source/repos/App.Budgeting.Legacy/Web/assets/finance/js/submissions/submission.js" />
      <jump line="104" column="29" filename="$USER_HOME$/source/repos/App.Admin/App.Admin/Web.config" />
      <jump line="138" column="33" filename="$USER_HOME$/source/repos/App.Admin/App.Admin/Web.config" />
      <jump line="407" column="51" filename="$USER_HOME$/source/repos/App.Admin/App.Admin/Controllers/Base/BaseController.cs" />
      <jump line="63" column="12" filename="$USER_HOME$/source/repos/App.Admin/App.Admin/Controllers/Base/BaseController.cs" />
      <jump line="55" column="36" filename="$USER_HOME$/source/repos/App.Admin/App.Admin/Controllers/Base/BaseController.cs" />
      <jump line="0" column="0" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.DataAccess/NHibernate/Repository.cs" />
      <jump line="136" column="23" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="166" column="29" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="167" column="43" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="169" column="35" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="326" column="36" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="329" column="36" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="498" column="41" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="504" column="29" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="512" column="29" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="521" column="37" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="523" column="42" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="524" column="38" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="529" column="44" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="531" column="42" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="537" column="44" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="539" column="42" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="550" column="29" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="553" column="43" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="558" column="44" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="560" column="42" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="563" column="51" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="569" column="42" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="572" column="51" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="578" column="42" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="581" column="51" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="587" column="42" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="590" column="51" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="599" column="29" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="668" column="29" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="670" column="43" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="678" column="29" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="686" column="34" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="694" column="38" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="702" column="36" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="707" column="36" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="709" column="34" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="715" column="34" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="717" column="34" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="723" column="34" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="725" column="34" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="726" column="30" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="731" column="44" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="733" column="34" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="734" column="43" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="741" column="83" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="1035" column="16" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="1717" column="28" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="1590" column="28" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="2188" column="0" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="2882" column="0" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
      <jump line="2936" column="1" filename="$USER_HOME$/source/repos/Collegiatelink.Legacy/Core/StudentVoiceGroups.Core.Web/Models/AdminNavigationViewModel.cs" />
    </jumps>
    <registers>
      <register name="a" type="4">
        <text>2dwjywkP</text>
      </register>
      <register name="&quot;" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIC8vbmV3IE5hdmlnYXRpb25Ob2RlIHsgQ29udHJvbGxlciA9ICJzeXN0ZW0iLCBBY3Rpb24gPSAibWFuYWdlY29tbXVuaXR5Y29uZmlndXJhdGlvbnN0eWxlcyIsIFJvdXRlVmFsdWVzID0gbmV3IHsgQXJlYSA9ICJhZG1pbiIgLCBjb250YWluZXJ0eXBlID0gc3RyaW5nLkVtcHR5LCBjb250YWluZXJpZCA9IHN0cmluZy5FbXB0eSAsIHByb2plY3RpZCA9IHN0cmluZy5FbXB0eSAgfSwgVGl0bGUgPSAiQ3VzdG9tIENTUyIsIFJvbGVzID0gY2FtcHVzTGFic0FjY2VzcyB9LAo=</text>
      </register>
      <register name="-" type="4">
        <text />
      </register>
      <register name="/" type="4">
        <text>\/*</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICB2YXIgY2FuQWNjZXNzRXh0ZW5zaW9uQ29uZmlnID0gX2xkQ2xpZW50LkJvb2xWYXJpYXRpb24oInZvdGVyLWVuZ2FnZW1lbnQtY29uZmlndXJhdGlvbiIsIHVzZXIsIGZhbHNlKSAmJiBDb21tdW5pdHlSZXF1ZXN0Q29udGV4dC5Db21tdW5pdHkuQ29uZmlndXJhdGlvbi5Wb3RlckVuZ2FnZW1lbnRFbmFibGVkOwo=</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIC8vbmV3IE5hdmlnYXRpb25Ob2RlIHsgQ29udHJvbGxlciA9ICJzeXN0ZW0iLCBBY3Rpb24gPSAibWFuYWdlY29tbXVuaXR5Y29uZmlndXJhdGlvbnN0eWxlcyIsIFJvdXRlVmFsdWVzID0gbmV3IHsgQXJlYSA9ICJhZG1pbiIgLCBjb250YWluZXJ0eXBlID0gc3RyaW5nLkVtcHR5LCBjb250YWluZXJpZCA9IHN0cmluZy5FbXB0eSAsIHByb2plY3RpZCA9IHN0cmluZy5FbXB0eSAgfSwgVGl0bGUgPSAiQ3VzdG9tIENTUyIsIFJvbGVzID0gY2FtcHVzTGFic0FjY2VzcyB9LAo=</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIC8vCW5ldyBOYXZpZ2F0aW9uTm9kZSB7IENvbnRyb2xsZXIgPSAicmVnaXN0cmF0aW9ucyIsIEFjdGlvbiA9ICJjb21tdW5pdHlyZWdpc3RyYXRpb25zIiwgUm91dGVWYWx1ZXMgPSBuZXcgeyBBcmVhID0gImFkbWluIiAsIGNvbnRhaW5lcnR5cGUgPSBzdHJpbmcuRW1wdHksIGNvbnRhaW5lcmlkID0gc3RyaW5nLkVtcHR5ICwgcHJvamVjdGlkID0gc3RyaW5nLkVtcHR5ICB9LCBUaXRsZSA9ICJSZWdpc3RyYXRpb24gRGVmYXVsdHMiLCBSb2xlcyA9IHJlZ2lzdHJhdGlvbkZvcm1zRnVsbEFjY2VzcywgSXNTZXR0aW5nID0gdHJ1ZSB9LAo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIC8vbmV3IE5hdmlnYXRpb25Ob2RlIHsgQ29udHJvbGxlciA9ICJvcmdhbml6YXRpb25zIiwgQWN0aW9uID0gImVkaXQiLCBSb3V0ZVZhbHVlcyA9IG5ldyB7IEFyZWEgPSAiYWRtaW4iICwgY29udGFpbmVydHlwZSA9IHN0cmluZy5FbXB0eSwgY29udGFpbmVyaWQgPSBzdHJpbmcuRW1wdHkgLCBwcm9qZWN0aWQgPSBzdHJpbmcuRW1wdHkgIH0sIFRpdGxlID0gImVkaXQgb3JnYW5pemF0aW9uIiwgSW5TaXRlTWFwUGF0aE9ubHkgPSB0cnVlIH0sCiAgICAgICAgICAgICAgICAvL25ldyBOYXZpZ2F0aW9uTm9kZSB7IENvbnRyb2xsZXIgPSAib3JnYW5pemF0aW9ucyIsIEFjdGlvbiA9ICJncm91cGNvbnRhY3RpbmZvIiwgUm91dGVWYWx1ZXMgPSBuZXcgeyBBcmVhID0gImFkbWluIiAsIGNvbnRhaW5lcnR5cGUgPSBzdHJpbmcuRW1wdHksIGNvbnRhaW5lcmlkID0gc3RyaW5nLkVtcHR5ICwgcHJvamVjdGlkID0gc3RyaW5nLkVtcHR5ICB9LCBUaXRsZSA9ICJlZGl0IG9yZ2FuaXphdGlvbiBjb250YWN0IGluZm8iLCBJblNpdGVNYXBQYXRoT25seSA9IHRydWUgfSwKICAgICAgICAgICAgICAgIC8vbmV3IE5hdmlnYXRpb25Ob2RlIHsgQ29udHJvbGxlciA9ICJvcmdhbml6YXRpb25zIiwgQWN0aW9uID0gImdyb3VwcG9zaXRpb25zIiwgUm91dGVWYWx1ZXMgPSBuZXcgeyBBcmVhID0gImFkbWluIiAsIGNvbnRhaW5lcnR5cGUgPSBzdHJpbmcuRW1wdHksIGNvbnRhaW5lcmlkID0gc3RyaW5nLkVtcHR5ICwgcHJvamVjdGlkID0gc3RyaW5nLkVtcHR5ICB9LCBUaXRsZSA9ICJvcmdhbml6YXRpb24gcG9zaXRpb25zIiwgSW5TaXRlTWFwUGF0aE9ubHkgPSB0cnVlIH0sCiAgICAgICAgICAgICAgICAvL25ldyBOYXZpZ2F0aW9uTm9kZSB7IENvbnRyb2xsZXIgPSAib3JnYW5pemF0aW9ucyIsIEFjdGlvbiA9ICJncm91cG91dGNvbWUiLCBSb3V0ZVZhbHVlcyA9IG5ldyB7IEFyZWEgPSAiYWRtaW4iICwgY29udGFpbmVydHlwZSA9IHN0cmluZy5FbXB0eSwgY29udGFpbmVyaWQgPSBzdHJpbmcuRW1wdHkgLCBwcm9qZWN0aWQgPSBzdHJpbmcuRW1wdHkgIH0sIFRpdGxlID0gIm9yZ2FuaXphdGlvbiBvdXRjb21lcyIsIEluU2l0ZU1hcFBhdGhPbmx5ID0gdHJ1ZSB9LAogICAgICAgICAgICAgICAgLy9uZXcgTmF2aWdhdGlvbk5vZGUgeyBDb250cm9sbGVyID0gIm9yZ2FuaXphdGlvbnMiLCBBY3Rpb24gPSAiZWRpdHBvc2l0aW9uIiwgUm91dGVWYWx1ZXMgPSBuZXcgeyBBcmVhID0gImFkbWluIiAsIGNvbnRhaW5lcnR5cGUgPSBzdHJpbmcuRW1wdHksIGNvbnRhaW5lcmlkID0gc3RyaW5nLkVtcHR5ICwgcHJvamVjdGlkID0gc3RyaW5nLkVtcHR5ICB9LCBUaXRsZSA9ICJlZGl0IHBvc2l0aW9uIiwgSW5TaXRlTWFwUGF0aE9ubHkgPSB0cnVlIH0sCiAgICAgICAgICAgICAgICAvL25ldyBOYXZpZ2F0aW9uTm9kZSB7IENvbnRyb2xsZXIgPSAib3JnYW5pemF0aW9ucyIsIEFjdGlvbiA9ICJjcmVhdGVwb3NpdGlvbiIsIFJvdXRlVmFsdWVzID0gbmV3IHsgQXJlYSA9ICJhZG1pbiIgLCBjb250YWluZXJ0eXBlID0gc3RyaW5nLkVtcHR5LCBjb250YWluZXJpZCA9IHN0cmluZy5FbXB0eSAsIHByb2plY3RpZCA9IHN0cmluZy5FbXB0eSAgfSwgVGl0bGUgPSAiY3JlYXRlIHBvc2l0aW9uIiwgSW5TaXRlTWFwUGF0aE9ubHkgPSB0cnVlIH0sCiAgICAgICAgICAgICAgICAvL25ldyBOYXZpZ2F0aW9uTm9kZSB7IENvbnRyb2xsZXIgPSAib3JnYW5pemF0aW9ucyIsIEFjdGlvbiA9ICJncm91cGNhdGVnb3JpZXMiLCBSb3V0ZVZhbHVlcyA9IG5ldyB7IEFyZWEgPSAiYWRtaW4iICwgY29udGFpbmVydHlwZSA9IHN0cmluZy5FbXB0eSwgY29udGFpbmVyaWQgPSBzdHJpbmcuRW1wdHkgLCBwcm9qZWN0aWQgPSBzdHJpbmcuRW1wdHkgIH0sIFRpdGxlID0gIm9yZ2FuaXphdGlvbiBjYXRlZ29yaWVzIiwgSW5TaXRlTWFwUGF0aE9ubHkgPSB0cnVlIH0sCg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgICAK</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgICAgICBwdWJsaWMgQWRtaW5OYXZpZ2F0aW9uVmlld01vZGVsKFJvdXRlRGF0YSByb3V0ZURhdGEsIE5hbWVWYWx1ZUNvbGxlY3Rpb24gcXVlcnlTdHJpbmcsIElQcmluY2lwYWwgdXNlciwKICAgICAgICAgICAgYm9vbCBjYW5BY2Nlc3NFdmVudFBhc3NDb25maWcgPSBmYWxzZSwgYm9vbCBjYW5BY2Nlc3NFeHRlbnNpb25Db25maWcgPSBmYWxzZSkKICAgICAgICB7CiAgICAgICAgICAgIF9jYW5BY2Nlc3NFdmVudFBhc3NDb25maWcgPSBjYW5BY2Nlc3NFdmVudFBhc3NDb25maWc7CiAgICAgICAgICAgIF9jYW5BY2Nlc3NFeHRlbnNpb25Db25maWcgPSBjYW5BY2Nlc3NFeHRlbnNpb25Db25maWc7CiAgICAgICAgICAgIExvYWROb2RlcygpOwogICAgICAgICAgICBTZXRTZWxlY3RlZE5vZGUocm91dGVEYXRhLCBxdWVyeVN0cmluZyk7CiAgICAgICAgICAgIEZpbHRlck5vZGVBY2Nlc3NpYmlsaXR5KHVzZXIpOwogICAgICAgIH0K</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="7" type="4">
        <text encoding="base64">CiAqIE9wdGlvbiBhZGRlZCB3aXRoIExhdW5jaERhcmtseSBpbnRlZ3JhdGlvbgogICAqIE5vdCBhZGRlZCB0byogVG8gaW1wbGVtZW50IGFkZCB0aGUgIkJ1ZGdldGluZzpQcm9jZXNzZXMiIGtleSB0byB0aGUgcHJvamVjdCBXZWIuY29uZmlnIHdoaWNoIGlzIGxvYWRpbmcgdGhlIGFkdW1pbiBtZW51</text>
      </register>
      <register name="8" type="4">
        <text>Add Budgeting Process as menu option
 *</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICBSb2xlcyA9IGFsbEZ1bGxBY2Nlc3MK</text>
      </register>
      <register name=":" type="4">
        <text>w</text>
      </register>
    </registers>
    <search>
      <last-search>\/*</last-search>
      <last-offset />
      <last-pattern>\/*</last-pattern>
      <last-replace>Error</last-replace>
      <last-substitute>Deviation</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>SubmissionOwner</entry>
        <entry>Budgeting</entry>
        <entry encoding="base64">XDxVcmxcPg==</entry>
        <entry>EngageLink</entry>
        <entry>root</entry>
        <entry encoding="base64">XDx0ZW1wbGF0ZVVybFw+</entry>
        <entry encoding="base64">XDx0ZW1wbGF0ZVBhdGhcPg==</entry>
        <entry encoding="base64">XDxzd2l0Y2hTdWJtaXNzaW9uT3duZXJcPg==</entry>
        <entry>switchSub</entry>
        <entry>constant</entry>
        <entry encoding="base64">XDx0YWJOYW1lc1w+</entry>
        <entry encoding="base64">XDxjb2xsZWdpYXRlTGlua09yZ2FuaXphdGlvblJvbGVzXD4=</entry>
        <entry>configure\/eventpass</entry>
        <entry encoding="base64">XDxfbGRDbGllbnRcPg==</entry>
        <entry>Event</entry>
        <entry encoding="base64">XDxfY2FuQWNjZXNzRXZlbnRQYXNzQ29uZmlnXD4=</entry>
        <entry>Deviation</entry>
        <entry encoding="base64">XDxmaW5hbmNlRnVsbEFjY2Vzc1w+</entry>
        <entry>\/\/</entry>
        <entry>\/*</entry>
      </history-search>
      <history-cmd>
        <entry>46</entry>
        <entry>.s/Deviation/Error/g</entry>
        <entry>133</entry>
        <entry>22</entry>
        <entry>%d</entry>
        <entry>35</entry>
        <entry>25</entry>
        <entry>41</entry>
        <entry>134</entry>
        <entry>194</entry>
        <entry>185</entry>
        <entry>179</entry>
        <entry>158</entry>
        <entry>wq</entry>
        <entry>$</entry>
        <entry>q</entry>
        <entry>%s</entry>
        <entry>0</entry>
        <entry>130</entry>
        <entry>w</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>